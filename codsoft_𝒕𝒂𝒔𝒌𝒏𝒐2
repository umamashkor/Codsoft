{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6aa01d98",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Build an AI model that can classify SMS messages as spam or\n",
    "# legitimate. Use techniques like TF-IDF or word embeddings with\n",
    "# classifiers like Naive Bayes, Logistic Regression, or Support Vector\n",
    "# Machines to identify spam messages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "269ce74a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, roc_auc_score\n",
    "import nltk\n",
    "from nltk.corpus import stopwords\n",
    "from collections import Counter\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a20aae9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Download the stopwords dataset\n",
    "nltk.download('stopwords')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d618fa4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Read the CSV file containing msgata into a DataFrame\n",
    "df = pd.read_csv(r\"C:/Users/SAEED COMPUTERS/Desktop/spam.csv\",encoding='latin-1')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c269d223",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop unnecessary columns from the DataFrame\n",
    "columns_to_drop = [\"Unnamed: 2\", \"Unnamed: 3\", \"Unnamed: 4\"]\n",
    "df.drop(columns=columns_to_drop, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8f42ebfc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Category</th>\n",
       "      <th>Message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ham</td>\n",
       "      <td>Go until jurong point, crazy.. Available only ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ham</td>\n",
       "      <td>Ok lar... Joking wif u oni...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>spam</td>\n",
       "      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ham</td>\n",
       "      <td>U dun say so early hor... U c already then say...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ham</td>\n",
       "      <td>Nah I don't think he goes to usf, he lives aro...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5567</th>\n",
       "      <td>spam</td>\n",
       "      <td>This is the 2nd time we have tried 2 contact u...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5568</th>\n",
       "      <td>ham</td>\n",
       "      <td>Will Ì_ b going to esplanade fr home?</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5569</th>\n",
       "      <td>ham</td>\n",
       "      <td>Pity, * was in mood for that. So...any other s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5570</th>\n",
       "      <td>ham</td>\n",
       "      <td>The guy did some bitching but I acted like i'd...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5571</th>\n",
       "      <td>ham</td>\n",
       "      <td>Rofl. Its true to its name</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5572 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Category                                            Message\n",
       "0         ham  Go until jurong point, crazy.. Available only ...\n",
       "1         ham                      Ok lar... Joking wif u oni...\n",
       "2        spam  Free entry in 2 a wkly comp to win FA Cup fina...\n",
       "3         ham  U dun say so early hor... U c already then say...\n",
       "4         ham  Nah I don't think he goes to usf, he lives aro...\n",
       "...       ...                                                ...\n",
       "5567     spam  This is the 2nd time we have tried 2 contact u...\n",
       "5568      ham              Will Ì_ b going to esplanade fr home?\n",
       "5569      ham  Pity, * was in mood for that. So...any other s...\n",
       "5570      ham  The guy did some bitching but I acted like i'd...\n",
       "5571      ham                         Rofl. Its true to its name\n",
       "\n",
       "[5572 rows x 2 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename the columns \"v1 and \"v2\" to new names\n",
    "\n",
    "new_column_names = {\"v1\":\"Category\",\"v2\":\"Message\"}\n",
    "df.rename(columns = new_column_names,inplace = True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cf173cab",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert the \"Category\" column values to numerical representation (0 for \"spam\" and 1 for \"ham\")\n",
    "data = df.where((pd.notnull(df)), ' ')\n",
    "data.loc[data[\"Category\"] == \"spam\", \"Category\"] = 0\n",
    "data.loc[data[\"Category\"] == \"ham\", \"Category\"] = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9a39992b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Separate the feature (message) and target (category) data\n",
    "\n",
    "X = data[\"Message\"]\n",
    "Y = data[\"Category\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f00a3871",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       1\n",
      "1       1\n",
      "2       0\n",
      "3       1\n",
      "4       1\n",
      "       ..\n",
      "5567    0\n",
      "5568    1\n",
      "5569    1\n",
      "5570    1\n",
      "5571    1\n",
      "Name: Category, Length: 5572, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#print(X)\n",
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "39b0444e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5572,) (5572,)\n",
      "(4457,) (4457,)\n",
      "(1115,) (1115,)\n"
     ]
    }
   ],
   "source": [
    "# Split the data into training and testing sets\n",
    "\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 3)\n",
    "print(X.shape,Y.shape)\n",
    "print(X_train.shape,Y_train.shape)\n",
    "print(X_test.shape,Y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9cba1604",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a TF-IDF vectorizer to convert text messages into numerical features\n",
    "feature_extraction = TfidfVectorizer(min_df=1, stop_words=\"english\", lowercase=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a17b077f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert the training and testing text messages into numerical features using TF-IDF\n",
    "X_train_features = feature_extraction.fit_transform(X_train)\n",
    "X_test_features = feature_extraction.transform(X_test)\n",
    "# Convert the target values to integers (0 and 1)\n",
    "Y_train = Y_train.astype(\"int\")\n",
    "Y_test = Y_test.astype(\"int\")\n",
    "#print(X_train)\n",
    "#print(X_train_features)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ea35f881",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a logistic regression model and train it on the training data\n",
    "\n",
    "model = LogisticRegression()\n",
    "model.fit(X_train_features, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8490307d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on training data: 0.9661207089970832\n"
     ]
    }
   ],
   "source": [
    "# Make predictions on the training data and calculate the accuracy\n",
    "\n",
    "prediction_on_training_data = model.predict(X_train_features)\n",
    "accuracy_on_training_data = accuracy_score(Y_train, prediction_on_training_data)\n",
    "print(\"Accuracy on training data:\",accuracy_on_training_data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7f89ceda",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on test data: 0.9623318385650225\n"
     ]
    }
   ],
   "source": [
    "# Make predictions on the test data and calculate the accuracy\n",
    "\n",
    "prediction_on_test_data = model.predict(X_test_features)\n",
    "accuracy_on_test_data = accuracy_score(Y_test,prediction_on_test_data)\n",
    "print(\"Accuracy on test data:\",accuracy_on_test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "55563510",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\n",
      "Spam msg\n"
     ]
    }
   ],
   "source": [
    "# Test the model with some custom messages\n",
    "\n",
    "input_your_msg = [\"Congratulations! You have won a free vacation to an exotic destination. Click the link to claim your prize now!\"]\n",
    "input_data_features = feature_extraction.transform(input_your_msg)\n",
    "prediction = model.predict(input_data_features)\n",
    "print(prediction)\n",
    "\n",
    "if (prediction)[0] == 1:\n",
    "  print(\"Ham msg\")\n",
    "else:\n",
    "  print(\"Spam msg\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a3d9830b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1]\n"
     ]
    }
   ],
   "source": [
    "# Test the model with some custom msg messages\n",
    "\n",
    "input_your_msg = [\"Meeting reminder: Tomorrow, 10 AM, conference room. See you there!\"]\n",
    "input_data_features = feature_extraction.transform(input_your_msg)\n",
    "prediction = model.predict(input_data_features)\n",
    "print(prediction)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5dc8c9f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ham msg\n"
     ]
    }
   ],
   "source": [
    "# Print the prediction result\n",
    "\n",
    "if (prediction)[0] == 1:\n",
    "  print(\"Ham msg\")\n",
    "else:\n",
    "  print(\"Spam msg\")\n",
    "spam_count = data[data['Category'] == 0].shape[0]\n",
    "ham_count = data[data['Category'] == 1].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "23f07c1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data visualization - Distribution of Spam and Ham msgs\n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.bar(['Spam','Ham'], [spam_count,ham_count])\n",
    "plt.xlabel('msg Type')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Distribution of Spam and Ham msgs')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7c888bcc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data visualization - Confusion Matrix\n",
    "\n",
    "cm = confusion_matrix(Y_test, prediction_on_test_data)\n",
    "\n",
    "plt.figure(figsize=(6, 4))\n",
    "sns.heatmap(cm, annot=True, fmt=\"d\", cmap='Blues', cbar=False)\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('True')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "153cef41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data visualization - Top 10 Most Common Words in Spam msgs\n",
    "stop_words = set(stopwords.words('english'))\n",
    "spam_words = \" \".join(data[data['Category'] == 0]['Message']).split()\n",
    "ham_words = \" \".join(data[data['Category'] == 1]['Message']).split()\n",
    "spam_word_freq = Counter([word.lower() for word in spam_words if word.lower() not in stop_words and word.isalpha()])\n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.bar(*zip(*spam_word_freq.most_common(10)), color='r')\n",
    "plt.xlabel('Words')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Top 10 Most Common Words in Spam msgs')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "63734dd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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onLlynlaLBERERVOuQoc8+fPx2effYbu3bvD1tY22z7lypXD0qVL36k4IiIiKhpyFTiuXLnyxj6Ghobo2rVrblZPRERERUyu5nCEhYVh48aNWdo3btyIFStWvHNRREREVLTkKnD897//hZWVVZZ2a2trhISEvHNRREREVLTkKnDcuHEDTk5OWdodHR1x8+bNdy6KiIiIipZcBQ5ra2ucOXMmS/vp06dhaWn5zkURERFR0ZKrwNGxY0cMHjwYERERSEtLQ1paGvbs2YMhQ4agY8eOeV0jERERFXK5ukrlm2++wY0bN9C4cWPo679YRXp6Orp06cI5HERERJRFrgKHoaEhNmzYgK+//hqnT5+GsbExPD094ejomNf1ERERURGQq8CRwcXFBS4uLnlVCxERERVRuQocaWlpWL58OXbv3o2YmBikp6drLd+zZ0+eFEdERERFQ64Cx5AhQ7B8+XK0bNkSHh4e0Gg0eV0XERERFSG5Chzr16/HDz/8gBYtWuR1PURERFQE5eqyWENDQ1SqVCmvayEiIqIiKleBY9iwYfjuu+8gInldDxERERVBuTqlcuDAAURERGDbtm2oUqUKDAwMtJZv3rw5T4ojIiKioiFXgaNkyZJo27ZtXtdCRERERVSuAkdYWFhe10FERERFWK7mcABAamoqfv/9dyxcuBBPnjwBANy9excJCQl5VhwREREVDbka4bhx4waaNWuGmzdvIikpCf7+/jAzM8O0adPw/PlzLFiwIK/rJCIiokIsVyMcQ4YMQY0aNRAbGwtjY2OlvW3btti9e3eeFUdERERFQ66vUjl48CAMDQ212h0dHXHnzp08KYyIiIiKjlyNcKSnpyMtLS1L++3bt2FmZvbORREREVHRkqvA4e/vj1mzZinPNRoNEhISMH78eN7unIiIiLLI1SmVmTNnws/PD+7u7nj+/DmCgoJw5coVWFlZYd26dXldIxERERVyuQoc9vb2OHXqFNatW4cTJ04gPT0dPXr0QOfOnbUmkRIREREBgEb4hSiIj4+HhYUF4uLiYG5unmfr1UzU5Nm63pWM/9f/mImISAU5/QzN1QjHypUrX7u8S5cuuVktERERFVG5ChxDhgzRep6SkoJnz57B0NAQJiYmDBxERESkJVdXqcTGxmo9EhIScOnSJdSvX5+TRomIiCiLXH+XSmbOzs7473//m2X0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",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Data visualization - Top 10 Most Common Words in Ham msgs\n",
    "ham_word_freq = Counter([word.lower() for word in ham_words if word.lower() not in stop_words and word.isalpha()])\n",
    "plt.figure(figsize=(6, 4))\n",
    "plt.bar(*zip(*ham_word_freq.most_common(10)), color='g')\n",
    "plt.xlabel('Words')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Top 10 Most Common Words in Ham msgs')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bcbb3234",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
